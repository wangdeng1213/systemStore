<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<mvc:default-servlet-handler />

	<mvc:view-controller path="/" view-name="forward:/index" />

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

	<!--
		如果配置include-filter,expression=org.springframework.stereotype.Controller模式,则annotation驱动的事务和缓存都不会起作用,详细请读源码
	-->
    <context:component-scan base-package="com.peanut" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" validator="validator"
                           conversion-service="conversion-service">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 默认视图解析器,此处为servlet、jsp解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes" >
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

	<!-- 异常处理部分  -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>/error/error</value>
		</property>
		<property name="defaultStatusCode">
			<value>500</value>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/errors/error </prop>
			</props>
		</property>
	</bean>

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <property name="validationMessageSource" ref="messageSource" />
    </bean>

	<!-- 文件上传相关 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
	</bean>

    <!--    &lt;!&ndash;日志拦截器&ndash;&gt;-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/img/*"/>
            <mvc:exclude-mapping path="/static/**"/>
            <mvc:exclude-mapping path="/favicon.ico"/>
            <mvc:exclude-mapping path="/sysLog/*"/>
            <bean class="com.peanut.p2p.interceptor.SysLogInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>